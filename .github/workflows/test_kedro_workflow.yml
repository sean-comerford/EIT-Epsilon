name: Build environment and run Kedro
run-name: Testing the kedro project for ${{github.ref_name}}
on: # [push] #Uncomment this and comment out lines 4-7 to trigger the workflow whenever new code is pushed.
  pull_request:
    branches:
      - main
      - test
jobs:
  run-pipeline:
    name: Run Kedro pipeline using conda environment on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Ensures that not all jobs are cancelled when one job in the matrix fails
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest" ]
    defaults:
      run:
        # This command ensures a bash shell is always used. It is required to run de conda and kedro commands below.
        shell: bash -el {0}
    steps:
      - uses: actions/checkout@v4 # This line ensures the repository is usable in the workflow
      - uses: conda-incubator/setup-miniconda@v3 # Creates a Conda environment
        with:
          auto-update-conda: false
          activate-environment: EIT-CICD-test
          environment-file: environment.yml
      - name: List packages
        run: conda list
      - name: Insert placeholder credentials
        run: cp .github/conf/credentials.yml conf/local/credentials.yml
      - name: List Kedro pipelines
        run: kedro registry list
#      - name: Run Kedro pipeline
#        run: kedro run --pipeline=scheduling_engine


  run-pipeline-pip:
    name: Run Kedro pipeline using Python environment on ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false # Ensures that not all jobs are cancelled when one job in the matrix fails
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest" ]
        python-version: ["3.11"]
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5 # Creates a Python environment without the use of Conda
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: pip install -r requirements.txt
      - name: List pip packages
        run: pip freeze
      - name: List Kedro pipelines
        run: kedro registry list
#      - name: Run Kedro pipeline
#        run: kedro run --pipeline=scheduling_engine
